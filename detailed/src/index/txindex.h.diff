diff --git a/src/index/txindex.h b/src/index/txindex.h
index 2bbc602631..87f87c9e44 100644
--- a/src/index/txindex.h
+++ b/src/index/txindex.h
@@ -1,14 +1,16 @@
 // Copyright (c) 2017-2021 The Bitcoin Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #ifndef BITCOIN_INDEX_TXINDEX_H
 #define BITCOIN_INDEX_TXINDEX_H
 
 #include <index/base.h>
+#include <index/disktxpos.h>
+#include <primitives/block.h>
 
 /**
  * TxIndex is used to look up transactions included in the blockchain by hash.
  * The index is written to a LevelDB database and records the filesystem
  * location of each transaction by transaction hash.
  */
@@ -30,17 +32,20 @@ protected:
 public:
     /// Constructs the index, which becomes available to be queried.
     explicit TxIndex(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);
 
     // Destructor is declared because this class contains a unique_ptr to an incomplete type.
     virtual ~TxIndex() override;
 
     /// Look up a transaction by hash.
     ///
     /// @param[in]   tx_hash  The hash of the transaction to be returned.
     /// @param[out]  block_hash  The hash of the block the transaction is found in.
     /// @param[out]  tx  The transaction itself.
     /// @return  true if transaction is found, false otherwise
     bool FindTx(const uint256& tx_hash, uint256& block_hash, CTransactionRef& tx) const;
+
+    bool FindTxPosition(const uint256& txid, CDiskTxPos& pos) const;
+    std::map<uint256,std::pair<CBlockHeader,CTransactionRef>> cachedTxs;
 };
 
 /// The global transaction index, used in GetTransaction. May be null.
