diff --git a/src/node/chainstate.cpp b/src/node/chainstate.cpp
index d03b9dcac6..d955ef5eaa 100644
--- a/src/node/chainstate.cpp
+++ b/src/node/chainstate.cpp
@@ -12,7 +12,6 @@ namespace node {
 std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,
                                                      ChainstateManager& chainman,
                                                      CTxMemPool* mempool,
-                                                     bool fPruneMode,
                                                      const Consensus::Params& consensus_params,
                                                      bool fReindexChainState,
                                                      int64_t nBlockTreeDBCache,
@@ -42,16 +41,11 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,
 
     if (fReset) {
         pblocktree->WriteReindexing(true);
-        //If we're reindexing in prune mode, wipe away unusable block files and all undo data files
-        if (fPruneMode)
-            CleanupBlockRevFiles();
     }
 
     if (shutdown_requested && shutdown_requested()) return ChainstateLoadingError::SHUTDOWN_PROBED;
 
-    // LoadBlockIndex will load fHavePruned if we've ever removed a
-    // block file from disk.
-    // Note that it also sets fReindex based on the disk flag!
+    // Note that LoadBlockIndex also sets fReindex based on the disk flag!
     // From here on out fReindex and fReset mean something different!
     if (!chainman.LoadBlockIndex()) {
         if (shutdown_requested && shutdown_requested()) return ChainstateLoadingError::SHUTDOWN_PROBED;
@@ -63,12 +57,6 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,
         return ChainstateLoadingError::ERROR_BAD_GENESIS_BLOCK;
     }
 
-    // Check for changed -prune state.  What we are concerned about is a user who has pruned blocks
-    // in the past, but is now trying to run unpruned.
-    if (fHavePruned && !fPruneMode) {
-        return ChainstateLoadingError::ERROR_PRUNED_NEEDS_REINDEX;
-    }
-
     // At this point blocktree args are consistent with what's on disk.
     // If we're not mid-reindex (based on disk + args), add a genesis block on disk
     // (otherwise we use the one already on disk).
